'use client';

import { useEffect, useState } from 'react';
import { useParams } from 'next/navigation';
import Link from 'next/link';
import { Sparkles, Download, FileText, ExternalLink } from 'lucide-react';
import jsPDF from 'jspdf';

interface AnalysisData {
  topic: string;
  summary: string;
  marketTrends: string;
  keyPlayers: string;
  useCases: string;
  challenges: string;
  createdAt: string;
}

export default function SharedAnalysis() {
  const params = useParams();
  const [analysisData, setAnalysisData] = useState<AnalysisData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchSharedAnalysis = async () => {
      try {
        const response = await fetch(`/api/create-share-link/${params.shareId}`);
        
        if (!response.ok) {
          throw new Error('Analysis not found');
        }
        
        const data = await response.json();
        setAnalysisData(data);
      } catch (err) {
        setError('Failed to load shared analysis');
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    if (params.shareId) {
      fetchSharedAnalysis();
    }
  }, [params.shareId]);

  const exportToPDF = () => {
    if (!analysisData) return;

    try {
      const pdf = new jsPDF();
      const pageWidth = pdf.internal.pageSize.getWidth();
      const margin = 20;
      const lineHeight = 7;
      let yPosition = margin;

      const addText = (text: string, fontSize = 12, isBold = false) => {
        pdf.setFontSize(fontSize);
        pdf.setFont('helvetica', isBold ? 'bold' : 'normal');
        
        const splitText = pdf.splitTextToSize(text, pageWidth - 2 * margin);
        
        if (yPosition + splitText.length * lineHeight > pdf.internal.pageSize.getHeight() - margin) {
          pdf.addPage();
          yPosition = margin;
        }
        
        pdf.text(splitText, margin, yPosition);
        yPosition += splitText.length * lineHeight + 5;
      };

      addText('GenAI-Scout Lite Analysis Report', 20, true);
      yPosition += 10;

      addText(`Topic: ${analysisData.topic}`, 14, true);
      yPosition += 10;

      addText(`Generated: ${new Date(analysisData.createdAt).toLocaleDateString()}`, 10);
      yPosition += 15;

      const sections = [
        { title: 'Technology Overview', content: analysisData.summary },
        { title: 'Market Trends', content: analysisData.marketTrends },
        { title: 'Key Players', content: analysisData.keyPlayers },
        { title: 'Use Cases', content: analysisData.useCases },
        { title: 'Challenges', content: analysisData.challenges },
      ];

      sections.forEach((section) => {
        addText(section.title, 14, true);
        addText(section.content, 11);
        yPosition += 5;
      });

      pdf.setFontSize(8);
      pdf.setFont('helvetica', 'italic');
      pdf.text('Generated by GenAI-Scout Lite - Technology Intelligence Assistant', margin, pdf.internal.pageSize.getHeight() - 10);

      pdf.save(`${analysisData.topic.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_shared_analysis.pdf`);
    } catch (error) {
      console.error('PDF export error:', error);
      alert('Failed to export PDF. Please try again.');
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Loading shared analysis...</p>
        </div>
      </div>
    );
  }

  if (error || !analysisData) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center">
        <div className="text-center max-w-md mx-auto p-8">
          <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <ExternalLink className="w-8 h-8 text-red-600" />
          </div>
          <h1 className="text-2xl font-bold text-gray-900 mb-2">Analysis Not Found</h1>
          <p className="text-gray-600 mb-6">
            The shared analysis link may have expired or is invalid.
          </p>
          <Link
            href="/"
            className="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200"
          >
            Create New Analysis
          </Link>
        </div>
      </div>
    );
  }

  const sections = [
    { title: 'Technology Overview', content: analysisData.summary, color: 'blue' },
    { title: 'Market Trends', content: analysisData.marketTrends, color: 'green' },
    { title: 'Key Players', content: analysisData.keyPlayers, color: 'purple' },
    { title: 'Use Cases', content: analysisData.useCases, color: 'orange' },
    { title: 'Challenges', content: analysisData.challenges, color: 'red' },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-md border-b border-gray-200">
        <div className="max-w-6xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
                <Sparkles className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  GenAI-Scout Lite
                </h1>
                <p className="text-sm text-gray-600">Shared Analysis</p>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <button
                onClick={exportToPDF}
                className="flex items-center space-x-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200"
              >
                <Download className="w-4 h-4" />
                <span>Download PDF</span>
              </button>
              <Link
                href="/"
                className="flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-200"
              >
                <Sparkles className="w-4 h-4" />
                <span>Create Your Own</span>
              </Link>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-6xl mx-auto px-4 py-8">
        <div className="space-y-8">
          {/* Title */}
          <div className="bg-white rounded-2xl shadow-lg border border-gray-200 p-8">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">{analysisData.topic}</h2>
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                <span className="text-gray-600">Shared Analysis</span>
              </div>
              <span className="text-sm text-gray-500">
                Generated: {new Date(analysisData.createdAt).toLocaleDateString()}
              </span>
            </div>
          </div>

          {/* Analysis Sections */}
          <div className="grid gap-6">
            {sections.map((section) => (
              <div
                key={section.title}
                className="bg-white rounded-2xl shadow-lg border border-gray-200 p-6"
              >
                <h3 className="text-xl font-semibold text-gray-900 mb-4 flex items-center space-x-3">
                  <FileText className="w-5 h-5 text-gray-600" />
                  <span>{section.title}</span>
                </h3>
                <div className="prose prose-gray max-w-none">
                  <div className="whitespace-pre-wrap text-gray-700 leading-relaxed">
                    {section.content}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </main>

      {/* Footer */}
      <footer className="bg-white border-t border-gray-200 mt-16">
        <div className="max-w-6xl mx-auto px-4 py-8">
          <div className="text-center text-gray-600">
            <p>Â© 2025 GenAI-Scout Lite. Powered by Groq AI.</p>
            <p className="text-sm mt-2">Fast, curated technology intelligence for innovation teams.</p>
          </div>
        </div>
      </footer>
    </div>
  );
}
